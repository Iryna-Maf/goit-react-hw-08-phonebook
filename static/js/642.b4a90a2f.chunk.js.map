{"version":3,"file":"static/js/642.b4a90a2f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Contacts/contacts.module.css?1e09","components/Contacts/Contacts.jsx","webpack://react-homework-template/./src/components/FormAddPhone/form-add-phone.module.css?916d","components/FormAddPhone/FormAddPhone.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/FormChangePhone/form-change-phone.module.css?ac70","components/FormChangePhone/FormChangePhone.jsx","redux/contacts/contacts-selector.js","redux/filter/filter-selector.js","webpack://react-homework-template/./src/Pages/ContactsPage/contacts-page.module.css?a25f","Pages/ContactsPage/ContactsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts_item__82PmL\",\"btn\":\"contacts_btn__w2CK-\",\"title\":\"contacts_title__ryyzt\",\"list\":\"contacts_list__QBWBd\",\"nameText\":\"contacts_nameText__Nzsn1\",\"phoneNumber\":\"contacts_phoneNumber__-1rbl\"};","import PropTypes from 'prop-types';\nimport s from './contacts.module.css';\n\nconst Contacts = ({ phoneList, onDeletePhoneListItem, onClick }) => {\n  return (\n    <ul className={s.list}>\n      {phoneList.map(({ id, name, number }) => (\n        <li key={id} id={id} className={s.item} onClick={onClick}>\n          <p className={s.nameText}>{name}</p>\n          <p className={s.phoneNumber}>{number}</p>\n          <button className={s.btn} onClick={() => onDeletePhoneListItem(id)}>\n            X\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n\nContacts.propTypes = {\n  Contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeletePhoneListItem: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-add-phone_form__g8HdS\",\"formGroup\":\"form-add-phone_formGroup__8FW-e\",\"label\":\"form-add-phone_label__gZrmx\",\"input\":\"form-add-phone_input__p3oI1\",\"btn\":\"form-add-phone_btn__MOgjW\",\"container\":\"form-add-phone_container__6iZMf\"};","import React from 'react';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nimport s from './form-add-phone.module.css';\n\nfunction FormAddPhone({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const hendleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onClickSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name,\n      number,\n    };\n    onSubmit(data);\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onClickSubmit} className={s.container}>\n      <div className={s.formGroup}>\n        <label htmlFor={nameInputId} className={s.label}>\n          Name\n        </label>\n        <br></br>\n        <input\n          onChange={hendleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Введите имя и фамилию\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id={nameInputId}\n        />\n      </div>\n      <div className={s.formGroup}>\n        <label htmlFor={numberInputId} className={s.label}>\n          Number\n        </label>\n        <br></br>\n        <input\n          onChange={hendleInputChange}\n          value={number}\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Введите номер телефона\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={numberInputId}\n        />\n        <div className={s.formGroup}>\n          <button className={s.btn} type=\"submit\">\n            Add contact\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormAddPhone;\n\nFormAddPhone.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\",\"container\":\"Filter_container__L5eml\"};","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Contacts:</h1>\n      <label className={s.input}>\n        Filter:{' '}\n        <input type=\"text\" name=\"name\" value={value} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"Modal_overlay__r63M6\",\"modal__content\":\"Modal_modal__content__VSCXP\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst Modal = ({ onClose, children }) => {\n  const modalRoot = document.querySelector('#modal-root');\n\n  useEffect(() => {\n    window.addEventListener('keydown', hendleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', hendleKeyDown);\n    };\n  });\n\n  const hendleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const hendleBackDropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <div className={s.overlay} onClick={hendleBackDropClick}>\n      <div className={s.modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-change-phone_form__+cj74\",\"formGroup\":\"form-change-phone_formGroup__bIqk8\",\"label\":\"form-change-phone_label__F5Lop\",\"input\":\"form-change-phone_input__6i3tC\",\"btn\":\"form-change-phone_btn__7ZM2v\",\"container\":\"form-change-phone_container__YdwUq\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { changeContactsItems } from 'redux/contacts/contacts-operations';\n\nimport s from './form-change-phone.module.css';\n\nconst FormChangePhone = ({ findContact, onClose }) => {\n  const [name, setName] = useState(findContact.name);\n  const [number, setNumber] = useState(findContact.number);\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n\n  const hendleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onClickSubmit = e => {\n    e.preventDefault();\n    const data = {\n      id: findContact.id,\n      name,\n      number,\n    };\n    dispatch(changeContactsItems(data));\n    resetForm();\n    onClose();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onClickSubmit} className={s.container}>\n      <div className={s.formGroup}>\n        <label htmlFor={nameInputId} className={s.label}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Input name\"\n            className={s.input}\n            value={name}\n            onChange={hendleInputChange}\n            id={nameInputId}\n          />\n        </label>\n      </div>\n      <div className={s.formGroup}>\n        <label htmlFor={numberInputId} className={s.label}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Input number\"\n            className={s.input}\n            value={number}\n            onChange={hendleInputChange}\n            id={numberInputId}\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className={s.btn} onSubmit={onClickSubmit}>\n        Change contact\n      </button>\n    </form>\n  );\n};\n\nexport default FormChangePhone;\n","export const getContactsList = store => store.contacts;\n","export const getFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title__change\":\"contacts-page_title__change__8iajo\",\"contact__name\":\"contacts-page_contact__name__duK1m\"};","import { useEffect, useState } from 'react';\nimport Contacts from '../../components/Contacts/Contacts';\nimport FormAddPhone from '../../components/FormAddPhone/FormAddPhone';\nimport Filter from '../../components/Filter/Filter';\nimport Modal from 'components/Modal/Modal';\n\nimport FormChangePhone from 'components/FormChangePhone/FormChangePhone';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContacts,\n  addItems,\n} from 'redux/contacts/contacts-operations';\nimport { addFilter } from 'redux/filter/filter-actions';\nimport { getContactsList } from 'redux/contacts/contacts-selector';\nimport { getFilter } from 'redux/filter/filter-selector';\n\nimport s from './contacts-page.module.css';\n\nconst ContactsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [findContact, setFindContact] = useState({});\n  const { loading } = useSelector(getContactsList);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const phoneList = useSelector(store => {\n    const filteredContact = store.contacts.items.filter(item =>\n      item.name.toLowerCase().includes(store.filter.toLocaleLowerCase())\n    );\n    return filteredContact;\n  });\n  // console.log('phoneList', phoneList);\n\n  const onAddContact = data => {\n    const action = addItems(data);\n    dispatch(action);\n  };\n\n  const onDelContact = id => {\n    const action = deleteContacts(id);\n    dispatch(action);\n  };\n  // console.log('onDelContact :>> ', onDelContact);\n\n  const onChangeFilter = e => {\n    const action = addFilter(e.currentTarget.value);\n    dispatch(action);\n  };\n\n  const findIdContact = e => {\n    const searchContact = phoneList.find(\n      contact => contact.id.toString() === e.currentTarget.id\n    );\n    setFindContact(searchContact);\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  return (\n    <div>\n      <FormAddPhone onSubmit={onAddContact} />\n      <Filter value={filter} onChange={onChangeFilter} />\n      {loading && <p>...Loading</p>}\n      <Contacts\n        phoneList={phoneList}\n        onDeletePhoneListItem={onDelContact}\n        onClick={findIdContact}\n      />\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <h2 className={s.title__change}>CHANGE CONTACT</h2>\n          <div className={s.contact}>\n            <p className={s.contact__name}>Name: {findContact.name}</p>\n            <p className={s.contact__name}>Tel: {findContact.number}</p>\n          </div>\n          <button\n            type=\"button\"\n            onClick={toggleModal}\n            className={s.modal__close}\n          >\n            close\n          </button>\n          <FormChangePhone onClose={toggleModal} findContact={findContact} />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["phoneList","onDeletePhoneListItem","onClick","className","s","map","id","name","number","onSubmit","useState","setName","setNumber","nameInputId","nanoid","numberInputId","hendleInputChange","e","currentTarget","value","reset","preventDefault","htmlFor","onChange","type","placeholder","pattern","title","required","onClose","children","modalRoot","document","querySelector","useEffect","window","addEventListener","hendleKeyDown","removeEventListener","event","code","createPortal","target","findContact","dispatch","useDispatch","onClickSubmit","data","changeContactsItems","resetForm","getContactsList","store","contacts","getFilter","filter","showModal","setShowModal","setFindContact","loading","useSelector","fetchContacts","items","item","toLowerCase","includes","toLocaleLowerCase","toggleModal","action","addItems","addFilter","deleteContacts","searchContact","find","contact","toString","size","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase"],"sourceRoot":""}